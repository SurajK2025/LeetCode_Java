//Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.

//Example 1:
//Input: arr = [1,2,2,1,1,3]
//Output: true
//Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.

//Example 2:
//Input: arr = [1,2]
//Output: false

//Example 3:
//Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
//Output: true

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class Solution {
	public static void main(String[] args) {
		int[] arr = {26,2,16,16,5,5,26,2,5,20,20,5,2,20,2,2,20,2,16,20,16,17,16,2,16,20,26,16};
		System.out.println(uniqueOccurrences(arr));
	}
	
	private static boolean uniqueOccurrences(int[] arr) {
		Map<Integer, Integer> hashmap = new HashMap<>();
		for(int i=0; i<arr.length; i++) {
			hashmap.put(arr[i], hashmap.getOrDefault(arr[i], 0)+1);
		}
		
		Set<Integer> hashSet = new HashSet<>();
		for(Integer i : hashmap.values()) {
			if(!hashSet.add(i)) return false;
		}
		
		return true;
	}
}
