//Given an array nums of size n, return the majority element.
//The majority element is the element that appears more than n / 2 times.
//You may assume that the majority element always exists in the array.

//Example 1:
//Input: nums = [3,2,3]
//Output: 3

//Example 2:
//Input: nums = [2,2,1,1,1,2,2]
//Output: 2

import java.util.HashMap;
import java.util.Map;

public class Solution {
	public static void main(String[] args) {
		int[] nums = {2,2,1,1,1,2,2};
		System.out.println(majorityElement(nums));
	}

	private static int majorityElement(int[] nums) {
		int maxFreq = 0;
		int element = 0;
		
		Map<Integer, Integer> hashmap = new HashMap<>();
		for(int i=0; i<nums.length; i++) {
			if(hashmap.containsKey(nums[i])) {
				int freq = hashmap.get(nums[i])+1;
				hashmap.put(nums[i], freq);
				if(freq > maxFreq) {
					maxFreq = freq;
					element = nums[i];
				}
			}
			else {
				hashmap.put(nums[i], 1);
				if(maxFreq == 0) {
					maxFreq = 1;
					element = nums[i];
				}
				
			}
		}
		
		return element;
	}
}